
> todo@0.0.0 test c:\Users\john.DCLABNT\projects\js\subramaniam-test-driving-js-apps\testangularjs\todo
> mocha --watch --recursive test/server


[?25l

  validate task tests
    âˆš should return true for valid task
    âˆš should return false for undefined task
    âˆš should return false for null task
    âˆš should return false for undefined name
    âˆš should return false for null name
    âˆš should return false for empty name
    âˆš should return false for undefined month
    âˆš should return false for null month
    âˆš should return false for non number month
    âˆš should return false for undefined day
    âˆš should return false for null day
    âˆš should return false for non number day
    âˆš should return false for undefined year
    âˆš should return false for null year
    âˆš should return false for non number year

  db tests
    âˆš should pass this canary test
    âˆš get should return null connection by default
    âˆš close should set connection to null
    âˆš close should close existing connection
    âˆš connect should set connection given valid database name (429ms)
    âˆš connect should reject invalid schema
    âˆš connect should reject invalid name

  task model tests
    âˆš all should return all the tasks
    âˆš get should return task with given id
    âˆš get should return null for non-existing task
    âˆš add should return null for valid task
    âˆš add should return Error if task already exists
    âˆš task.validate should refer to validateTask
    âˆš add should call validate
    âˆš add should handle validation failure
    âˆš delete should send null after deleting existing task
    âˆš delete should return Error if task not found
    âˆš delete should return Error if task id not given

  tasks routes tests
    âˆš should register URI / for get
sandbox.stub(obj, 'meth', val) is deprecated and will be removed from the public API in a future version of sinon.
 Use sandbox.stub(obj, 'meth').callsFake(fn) instead in order to stub a function.
 Use sandbox.stub(obj, 'meth').value(fn) instead in order to stub a non-function value.
sinon.stub(obj, 'meth', fn) is deprecated and will be removed from the public API in a future version of sinon.
 Use stub(obj, 'meth').callsFake(fn).
 Codemod available at https://github.com/hurrymaplelad/sinon-codemod
    âˆš get / handler should call model's all & returns result
    âˆš should register URI /:id for get
sandbox.stub(obj, 'meth', val) is deprecated and will be removed from the public API in a future version of sinon.
 Use sandbox.stub(obj, 'meth').callsFake(fn) instead in order to stub a function.
 Use sandbox.stub(obj, 'meth').value(fn) instead in order to stub a non-function value.
sinon.stub(obj, 'meth', fn) is deprecated and will be removed from the public API in a future version of sinon.
 Use stub(obj, 'meth').callsFake(fn).
 Codemod available at https://github.com/hurrymaplelad/sinon-codemod
    âˆš get /:validid handler should call model's get & returns a task
sandbox.stub(obj, 'meth', val) is deprecated and will be removed from the public API in a future version of sinon.
 Use sandbox.stub(obj, 'meth').callsFake(fn) instead in order to stub a function.
 Use sandbox.stub(obj, 'meth').value(fn) instead in order to stub a non-function value.
sinon.stub(obj, 'meth', fn) is deprecated and will be removed from the public API in a future version of sinon.
 Use stub(obj, 'meth').callsFake(fn).
 Codemod available at https://github.com/hurrymaplelad/sinon-codemod
    âˆš get /:invalidid handler should call model's get & returns {}
    âˆš should register URI / for post
sandbox.stub(obj, 'meth', val) is deprecated and will be removed from the public API in a future version of sinon.
 Use sandbox.stub(obj, 'meth').callsFake(fn) instead in order to stub a function.
 Use sandbox.stub(obj, 'meth').value(fn) instead in order to stub a non-function value.
sinon.stub(obj, 'meth', fn) is deprecated and will be removed from the public API in a future version of sinon.
 Use stub(obj, 'meth').callsFake(fn).
 Codemod available at https://github.com/hur
